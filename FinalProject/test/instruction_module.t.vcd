$date
	Tue Dec  1 22:45:38 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_instruction_module $end
$var wire 32 ! one_output_instructions [31:0] $end
$var wire 64 " two_output_instructions [63:0] $end
$var reg 1 # clk $end
$var reg 1 $ dutPass $end
$var reg 32 % inputaddress [31:0] $end
$scope module dut1 $end
$var wire 32 & address [31:0] $end
$var wire 1 ' clk $end
$var reg 32 ( dataOut [31:0] $end
$upscope $end
$scope module dut2 $end
$var wire 32 ) address [31:0] $end
$var wire 1 ' clk $end
$var reg 64 * dataOut [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
bx )
bx (
0'
bx &
bx %
1$
0#
bx "
bx !
$end
#1
1#
1'
#2
0#
0'
#3
1#
1'
#4
0#
0'
#5
1#
1'
#6
0#
0'
#7
1#
1'
#8
0#
0'
#9
1#
1'
#10
0#
0'
#11
1#
1'
#12
0#
0'
#13
1#
1'
#14
0#
0'
#15
1#
1'
#16
0#
0'
#17
1#
1'
#18
0#
0'
#19
1#
1'
#20
0#
0'
#21
1#
1'
#22
0#
0'
#23
1#
1'
#24
0#
0'
#25
1#
1'
#26
0#
0'
#27
1#
1'
#28
0#
0'
#29
1#
1'
#30
0#
0'
#31
1#
1'
#32
0#
0'
#33
1#
1'
#34
0#
0'
